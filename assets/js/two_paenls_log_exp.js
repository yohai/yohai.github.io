function resizeCanvas(e){const t=e.getBoundingClientRect();e.width=t.width,e.height=t.height}function drawGrid(e,t,n){e.clearRect(0,0,e.canvas.width,e.canvas.height),e.save(),e.strokeStyle="#eee",e.lineWidth=1,e.beginPath();const a=-Math.ceil(center.x/scale),c=Math.ceil((e.canvas.width-center.x)/scale);for(let t=a;t<=c;t++){const n=center.x+t*scale;e.moveTo(n,0),e.lineTo(n,e.canvas.height)}const s=-Math.ceil(center.y/scale),i=Math.ceil((e.canvas.height-center.y)/scale);for(let t=s;t<=i;t++){const n=center.y+t*scale;e.moveTo(0,n),e.lineTo(e.canvas.width,n)}e.stroke(),e.strokeStyle="#000",e.lineWidth=2,e.beginPath(),e.moveTo(0,center.y),e.lineTo(e.canvas.width,center.y),e.moveTo(center.x,0),e.lineTo(center.x,e.canvas.height),e.stroke(),e.strokeStyle="#000",e.lineWidth=1.5,e.beginPath();for(let n=0;n<t.length;n++){const a=center.x+t[n]*scale;e.moveTo(a,center.y-5),e.lineTo(a,center.y+5);const c=center.y+t[n]*scale;e.moveTo(center.x-5,c),e.lineTo(center.x+5,c)}e.stroke(),e.font="12px Arial",e.textAlign="center",e.textBaseline="top";for(let a=0;a<t.length;a++){const c=center.x+t[a]*scale;Math.abs(t[a])<1e-6||e.fillText(n[a],c,center.y+8)}e.textAlign="left",e.textBaseline="middle";for(let a=0;a<t.length;a++){const c=center.y-t[a]*scale;Math.abs(t[a])<1e-6||e.fillText(n[a],center.x+8,c)}e.restore()}function toCanvasCoords(e){return{x:center.x+e.x*scale,y:center.y-e.y*scale}}function fromCanvasCoords(e){return{x:(e.x-center.x)/scale,y:(center.y-e.y)/scale}}function drawPoint(e,t,n="red"){const a=toCanvasCoords(t);e.beginPath(),e.arc(a.x,a.y,radius,0,2*Math.PI),e.fillStyle=n,e.fill()}function expMap(e){const t=Math.exp(e.x);return{x:t*Math.cos(e.y),y:t*Math.sin(e.y)}}function logMap(e){const t=Math.sqrt(e.x*e.x+e.y*e.y),n=Math.atan2(e.y,e.x);return{x:Math.log(t),y:n}}function redraw(){center={x:canvas1.width/2,y:canvas1.height/2},drawGrid(ctx2,intTicks,intLabels),drawGrid(ctx1,piTicks,piLabels),drawPoint(ctx1,z,"red"),drawPoint(ctx2,expMap(z),"blue")}function isInsidePoint(e,t){const n=toCanvasCoords(t),a=e.x-n.x,c=e.y-n.y;return a*a+c*c<=radius*radius}function setupDragging(e,t,n){e.addEventListener("mousedown",a=>{const c=e.getBoundingClientRect();isInsidePoint({x:a.clientX-c.left,y:a.clientY-c.top},t())&&(dragging=!0,dragSource={canvas:e,setZ:n})}),e.addEventListener("mousemove",t=>{if(!dragging||dragSource.canvas!==e)return;const n=e.getBoundingClientRect(),a=fromCanvasCoords({x:t.clientX-n.left,y:t.clientY-n.top});dragSource.setZ(a),redraw()}),e.addEventListener("mouseup",()=>dragging=!1),e.addEventListener("mouseleave",()=>dragging=!1)}const canvas1=document.getElementById("canvas1"),canvas2=document.getElementById("canvas2");resizeCanvas(canvas1),resizeCanvas(canvas2);const ctx1=canvas1.getContext("2d"),ctx2=canvas2.getContext("2d"),width=canvas1.width,height=canvas1.height;let center={x:width/2,y:height/2};const radius=8.5,scale=30,intTicks=[-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6],intLabels=intTicks.map(e=>e.toString()),piTicks=[-2*Math.PI,-Math.PI,0,Math.PI,2*Math.PI],piLabels=["-2\u03c0","-\u03c0","0","\u03c0","2\u03c0"];let z={x:1,y:1},dragging=!1,dragSource=null;setupDragging(canvas1,()=>z,e=>{z=e}),setupDragging(canvas2,()=>expMap(z),e=>{z=logMap(e)}),window.addEventListener("resize",()=>{resizeCanvas(canvas1),resizeCanvas(canvas2),redraw()}),redraw();